{"version":3,"sources":["components/helpers/PopUp.tsx","components/helpers/Page.tsx","components/account_setup/LoginForm.tsx","services/account.ts","components/account_setup/RegisterForm.tsx","services/template.ts","components/item_directories/own_items/ShowTemplates.tsx","components/FrontPage.tsx","components/item_directories/make_template/AddItems.tsx","components/item_directories/make_template/AddList.tsx","components/helpers/ConfirmDialog.tsx","components/item_directories/own_items/ShowItems.tsx","components/item_directories/ranking/RankItems.tsx","services/ranking.ts","components/item_directories/ranking/ShowRankings.tsx","components/App.tsx","components/theme.tsx","index.tsx"],"names":["props","message","Snackbar","autoHideDuration","open","onClose","setMessage","onExited","Alert","variant","severity","endsWith","title","AlertTitle","substring","length","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","paperStyles","undefined","container","containerStyles","classes","Container","component","className","maxWidth","children","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","extraInfo","color","info","setHasLoginToken","React","useState","email","setEmail","password","setPassword","err","setErr","history","useHistory","Page","Typography","noValidate","onSubmit","event","login","preventDefault","axios","post","then","data","window","localStorage","setItem","token","push","catch","e","response","status","TextField","required","fullWidth","label","onChange","target","value","autoFocus","type","Button","Grid","item","xs","Link","onClick","PopUp","popper","border","padding","background","name","setName","pass","setPass","errMsg","passAnchorEl","setPassAnchorEl","getPasswordHelperText","requiredParameters","toLowerCase","key","match","test","register","username","result","trim","onFocus","currentTarget","onBlur","justify","Popper","anchorEl","placement","getSpecificTemplate","id","get","headers","authorization","getItem","marginLeft","marginRight","root","height","textAlign","content","button","marginBottom","img","maxHeight","allTemplates","setAllTemplates","useEffect","map","imageUrl","sm","md","lg","Card","elevation","to","path","style","textDecoration","tabIndex","CardActionArea","src","alt","CardContent","outline","noWrap","alignSelf","align","registerPlugin","FilePondPluginImagePreview","FilePondPluginImageExifOrientation","FilePondPluginFileValidateType","FilePondPluginImageResize","FilePondPluginFileEncode","returnUrl","setOpen","image","setImage","textItems","setTextItems","templateItem","images","imgStringBase64","fileType","getFileEncodeBase64String","filenameWithoutExtension","concat","split","filter","files","imagePreviewHeight","imagePreviewMaxFileSize","imageResizeMode","acceptedFileTypes","allowMultiple","onupdatefiles","fileItems","multiline","rows","placeholder","templateName","setTemplateName","desc","setDesc","templateImage","setTemplateImage","setId","AddItems","template","rowsMax","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","rejectButtonDesc","onAccept","acceptButtonDesc","titleInput","descInput","active","iconBar","justifyContent","gridAutoFlow","delete","warning","templateId","params","templateImageUrl","createdOn","lastUpdated","setTemplate","setTitle","setInfo","items","setItems","isDeleteDialogOpen","setIsDeleteDialogOpen","isEditMode","setEditMode","isAddMode","setAddMode","Set","deleteList","setDeleteList","_","Tooltip","IconButton","aria-label","fontSize","forEach","itemId","newName","has","deleteItem","put","updateTemplate","updatedTime","defaultValue","wordWrap","Date","toString","index","itemImageUrl","copy","add","position","ConfirmDialog","minHeight","buttons","isLoading","setIsLoading","getRandom","allItems","firstRandom","Math","random","secondRandom","handleSelect","wonId","lostId","won","lost","rankItems","Box","size","cardInfo","card","primary","sort","a","b","elo","Fragment","flexGrow","logout","hasLoginToken","AppBar","Toolbar","document","pl","clear","LoginForm","RegisterForm","ShowItems","OwnItems","AddList","RankItems","ShowRankings","FrontPage","createMuiTheme","purple","default","amber","pink","ReactDOM","render","ThemeProvider","CssBaseline","App","getElementById"],"mappings":"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","file":"static/js/main.571035f5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\r\n\r\nimport { SnackbarProps } from \"@material-ui/core\";\r\nimport { AlertProps } from \"@material-ui/lab/Alert\";\r\nconst isSuccess = \"&severity=success\";\r\nexport interface InputProps {\r\n  severity?: AlertProps[\"severity\"];\r\n  title?: string;\r\n  variant?: AlertProps[\"variant\"];\r\n  autoHideDuration?: SnackbarProps[\"autoHideDuration\"];\r\n  message: string;\r\n  setMessage: (msg: string) => void;\r\n}\r\n\r\nexport default (props: InputProps) => {\r\n  if (props.message)\r\n    return (\r\n      <Snackbar\r\n        autoHideDuration={props.autoHideDuration || 5000}\r\n        open={!!props.message}\r\n        onClose={() => {\r\n          props.setMessage(\"\");\r\n        }}\r\n        onExited={() => {\r\n          props.setMessage(\"\");\r\n        }}\r\n        message={props.message}\r\n      >\r\n        <Alert\r\n          variant={props.variant}\r\n          severity={\r\n            props.message.endsWith(isSuccess) ? \"success\" : props.severity\r\n          }\r\n        >\r\n          {props.title && <AlertTitle>{props.title}</AlertTitle>}\r\n          {props.message.endsWith(isSuccess)\r\n            ? props.message.substring(\r\n                0,\r\n                props.message.length - isSuccess.length\r\n              )\r\n            : props.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    );\r\n  return null;\r\n};\r\n","import React, { ReactNode } from \"react\";\r\nimport {\r\n  Theme,\r\n  makeStyles,\r\n  Container,\r\n  ContainerTypeMap,\r\n} from \"@material-ui/core\";\r\nimport { CreateCSSProperties } from \"@material-ui/core/styles/withStyles\";\r\nexport interface Props {\r\n  children?: ReactNode;\r\n  containerStyles?: (theme: Theme) => CreateCSSProperties;\r\n  paperStyles?: (theme: Theme) => CreateCSSProperties;\r\n  maxWidth?: ContainerTypeMap[\"props\"][\"maxWidth\"];\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => {\r\n  const paperStyles = (props: Props) =>\r\n    props.paperStyles ? props.paperStyles(theme) : undefined;\r\n  const containerStyles = (props: Props) =>\r\n    props.containerStyles ? props.containerStyles(theme) : undefined;\r\n  return {\r\n    paper: (props: Props) => ({\r\n      marginTop: theme.spacing(8),\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      ...paperStyles(props),\r\n    }),\r\n    container: (props: Props) => ({ ...containerStyles(props) }),\r\n  };\r\n});\r\nexport default (props: Props) => {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      className={classes.container}\r\n      maxWidth={props.maxWidth !== undefined ? props.maxWidth : \"xs\"}\r\n    >\r\n      <div className={classes.paper}>{props.children}</div>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Link,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { login } from \"../../services/account\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HasLoginToken } from \"../App\";\r\nimport Page from \"../helpers/Page\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  extraInfo: {\r\n    color: theme.palette.info.main,\r\n  },\r\n}));\r\n\r\nexport default ({ setHasLoginToken }: { setHasLoginToken: HasLoginToken }) => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [err, setErr] = React.useState(\"\");\r\n  const history = useHistory();\r\n  const onSubmit = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n    if (!email) {\r\n      setErr(\"Can't have empty email\");\r\n    } else if (!password) {\r\n      setErr(\"Can't have empty password\");\r\n    } else\r\n      login({ email, password })\r\n        .then(({ data }) => {\r\n          window.localStorage.setItem(\"login_token\", data.token);\r\n          setEmail(\"\");\r\n          setPassword(\"\");\r\n          setHasLoginToken(true);\r\n          history.push(\"/myitems\");\r\n        })\r\n        .catch((e) => {\r\n          if (e.response) {\r\n            const status = e.response.status;\r\n            if (status === 401) setErr(\"Bad credentials\");\r\n            else setErr(`Error code ${status}`);\r\n          }\r\n        });\r\n  };\r\n  return (\r\n    <Page maxWidth=\"xs\">\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          label=\"Email Address\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          autoFocus\r\n          color=\"secondary\"\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          value={password}\r\n          label=\"Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          type=\"password\"\r\n          color=\"secondary\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Grid container>\r\n          <Grid item xs></Grid>\r\n          <Grid item>\r\n            <Link\r\n              onClick={() => history.push(\"/register\")}\r\n              variant=\"body2\"\r\n              className={classes.extraInfo}\r\n            >\r\n              {\"Don't have an account? Sign Up\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <PopUp severity=\"error\" message={err} setMessage={setErr} />\r\n    </Page>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api\";\r\n\r\nexport interface Login {\r\n  email: string;\r\n  password: string;\r\n}\r\nexport interface Register {\r\n  email: string;\r\n  password: string;\r\n  username: string;\r\n}\r\nexport interface LoginResult {\r\n  username: string;\r\n  userNum: number;\r\n  email: string;\r\n  token: string;\r\n}\r\nexport const login = (login: Login) => {\r\n  return axios.post<LoginResult>(`${baseUrl}/login`, login);\r\n};\r\nexport const register = (register: Register) => {\r\n  return axios.post<LoginResult>(`${baseUrl}/register`, register);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Link,\r\n  Button,\r\n  Popper,\r\n} from \"@material-ui/core\";\r\nimport PopUp from \"../helpers/PopUp\";\r\nimport { register } from \"../../services/account\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { HasLoginToken } from \"../App\";\r\nimport Page from \"../helpers/Page\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  extraInfo: {\r\n    color: theme.palette.info.main,\r\n  },\r\n  popper: {\r\n    border: \"1px solid\",\r\n    margin: theme.spacing(1),\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default ({ setHasLoginToken }: { setHasLoginToken: HasLoginToken }) => {\r\n  const [name, setName] = React.useState(\"\");\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [pass, setPass] = React.useState(\"\");\r\n  const [errMsg, setErr] = React.useState(\"\");\r\n  const [passAnchorEl, setPassAnchorEl] = React.useState<null | HTMLElement>(\r\n    null\r\n  );\r\n  const history = useHistory();\r\n  const onSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (!name) setErr(\"Missing name\");\r\n    else if (!email) setErr(\"Missing email\");\r\n    else if (getPasswordHelperText().length !== 0)\r\n      setErr(\"Password does not satisfy requirements\");\r\n    else if (!/.+@.+/.test(email) || email.length > 100)\r\n      setErr(\"Invalid email\");\r\n    else {\r\n      register({ username: name, email, password: pass })\r\n        .then((result) => {\r\n          window.localStorage.setItem(\"login_token\", result.data.token);\r\n          setEmail(\"\");\r\n          setPass(\"\");\r\n          setName(\"\");\r\n          setHasLoginToken(true);\r\n          history.push(\"/myitems\");\r\n        })\r\n        .catch((err) => {\r\n          if (err.response) {\r\n            const status = err.response.status;\r\n            setErr(`Error code ${status}. The email might already be taken.`);\r\n          }\r\n        });\r\n    }\r\n  };\r\n  const classes = useStyles();\r\n\r\n  const getPasswordHelperText = (): React.ReactElement<typeof Typography>[] => {\r\n    const requiredParameters: React.ReactElement<typeof Typography>[] = [];\r\n    if (pass.toLowerCase() === pass)\r\n      requiredParameters.push(\r\n        <Typography variant=\"subtitle2\" component=\"p\" key=\"no upper case\">\r\n          Needs an uppercase letter.\r\n        </Typography>\r\n      );\r\n    if (pass.length < 8 || pass.length > 40)\r\n      requiredParameters.push(\r\n        <Typography\r\n          variant=\"subtitle2\"\r\n          component=\"p\"\r\n          key=\"too short or too long\"\r\n        >\r\n          Must be between 8 to 40 characters.\r\n        </Typography>\r\n      );\r\n    if (!pass.match(/[#?!@$%^&*-]/))\r\n      requiredParameters.push(\r\n        <Typography variant=\"subtitle2\" component=\"p\" key=\"no symbol\">\r\n          Contains one of the following: #?!@$%^&*-\r\n        </Typography>\r\n      );\r\n    if (!/\\d/.test(pass))\r\n      requiredParameters.push(\r\n        <Typography variant=\"subtitle2\" component=\"p\" key=\"no number\">\r\n          Needs at least 1 number.\r\n        </Typography>\r\n      );\r\n    return requiredParameters;\r\n  };\r\n  return (\r\n    <Page maxWidth=\"xs\">\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign up\r\n      </Typography>\r\n      <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label=\"Display name\"\r\n              autoFocus\r\n              color=\"secondary\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value.trim())}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label=\"Email Address\"\r\n              color=\"secondary\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value.trim())}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              color=\"secondary\"\r\n              onFocus={(e) => setPassAnchorEl(e.currentTarget)}\r\n              onBlur={() => setPassAnchorEl(null)}\r\n              value={pass}\r\n              onChange={(e) => setPass(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n        <Grid container justify=\"flex-end\">\r\n          <Grid item>\r\n            <Link\r\n              onClick={() => history.push(\"/login\")}\r\n              variant=\"body2\"\r\n              className={classes.extraInfo}\r\n            >\r\n              Already have an account? Sign in\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <Popper\r\n        open={!!passAnchorEl && !!getPasswordHelperText().length}\r\n        anchorEl={passAnchorEl}\r\n        placement=\"left\"\r\n        className={classes.popper}\r\n      >\r\n        {getPasswordHelperText()}\r\n      </Popper>\r\n      <PopUp message={errMsg} severity={\"error\"} setMessage={setErr} />\r\n    </Page>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/template\";\r\n\r\nexport interface NewTemplate {\r\n  title: string;\r\n  info?: string;\r\n  imgStringBase64?: string;\r\n}\r\nexport interface NewTemplateItem {\r\n  id: string | number;\r\n  images: { imgStringBase64?: string; name: string }[];\r\n}\r\nexport type AllTemplates = {\r\n  id: number;\r\n  title: string;\r\n  info: string;\r\n  imageUrl: string | null;\r\n  createdOn: string;\r\n  lastUpdated: string;\r\n}[];\r\nexport interface SpecificTemplate {\r\n  title: string;\r\n  info: string;\r\n  templateImageUrl: string | null;\r\n  createdOn: string;\r\n  lastUpdated: string;\r\n  items: {\r\n    id: number;\r\n    itemImageUrl: string | null;\r\n    elo: number;\r\n    imageId: string | null;\r\n    name: string;\r\n  }[];\r\n}\r\nexport interface AddTemplateResult {\r\n  id: string | number;\r\n}\r\nexport interface UpdateTemplateResult {\r\n  updatedTime: string;\r\n}\r\n\r\nexport const addTemplate = (template: NewTemplate) => {\r\n  return axios.post<AddTemplateResult>(baseUrl, template, {\r\n    headers: {\r\n      authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n    },\r\n  });\r\n};\r\nexport const addItem = (templateItem: NewTemplateItem) => {\r\n  return axios.post<undefined>(\r\n    `${baseUrl}/${templateItem.id}`,\r\n    { images: templateItem.images },\r\n    {\r\n      headers: {\r\n        authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n      },\r\n    }\r\n  );\r\n};\r\nexport const getAllTemplates = () => {\r\n  return axios.get<AllTemplates>(baseUrl, {\r\n    headers: {\r\n      authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n    },\r\n  });\r\n};\r\nexport const getSpecificTemplate = (id: number | string) => {\r\n  return axios.get<SpecificTemplate>(`${baseUrl}/${id}`, {\r\n    headers: {\r\n      authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n    },\r\n  });\r\n};\r\nexport const deleteTemplate = (id: number | string) => {\r\n  return axios.delete<undefined>(`${baseUrl}/${id}`, {\r\n    headers: {\r\n      authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n    },\r\n  });\r\n};\r\nexport const deleteItem = (itemId: number | string) => {\r\n  return axios.delete<undefined>(`${baseUrl}/item/${itemId}`, {\r\n    headers: {\r\n      authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n    },\r\n  });\r\n};\r\nexport const updateItem = (itemId: number | string, newName: string) => {\r\n  return axios.put<undefined>(\r\n    `${baseUrl}/item/${itemId}`,\r\n    { name: newName },\r\n    {\r\n      headers: {\r\n        authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n      },\r\n    }\r\n  );\r\n};\r\nexport const updateTemplate = (\r\n  id: number | string,\r\n  title: string,\r\n  info: string\r\n) => {\r\n  return axios.put<UpdateTemplateResult>(\r\n    `${baseUrl}/${id}`,\r\n    { title, info },\r\n    {\r\n      headers: {\r\n        authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n      },\r\n    }\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport reactRouterDom from \"react-router-dom\";\r\n\r\nimport { getAllTemplates, AllTemplates } from \"../../../services/template\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  title: { textAlign: \"center\" },\r\n  content: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  img: {\r\n    maxHeight: 400,\r\n    width: \"100%\",\r\n  },\r\n  container: {\r\n    display: \"grid\",\r\n  },\r\n}));\r\nexport default ({ match }: { match: reactRouterDom.match }) => {\r\n  const classes = useStyles();\r\n  const [allTemplates, setAllTemplates] = React.useState<AllTemplates>([]);\r\n  React.useEffect(() => {\r\n    getAllTemplates().then(({ data }) => {\r\n      setAllTemplates(data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Container component=\"main\" maxWidth={false} className={classes.container}>\r\n      <div className={classes.paper}>\r\n        <Grid container spacing={2} justify=\"flex-start\" alignItems=\"stretch\">\r\n          <Grid item xs={12}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Your Templates\r\n            </Typography>\r\n          </Grid>\r\n\r\n          {allTemplates.map(({ id, title, imageUrl }) => (\r\n            <Grid item xs={5} sm={4} md={3} lg={2} key={id}>\r\n              <Card variant=\"elevation\" elevation={5} className={classes.root}>\r\n                <Link\r\n                  to={`${match.path}/${id}`}\r\n                  style={{\r\n                    textDecoration: \"none\",\r\n                    color: \"#FFF\",\r\n                  }}\r\n                  tabIndex={-1}\r\n                >\r\n                  <CardActionArea\r\n                    style={{\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    {imageUrl && (\r\n                      <img\r\n                        src={imageUrl as string}\r\n                        alt={title}\r\n                        className={classes.img}\r\n                      />\r\n                    )}\r\n                    <CardContent\r\n                      style={{\r\n                        outline: \"none\",\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        className={classes.title}\r\n                        color=\"textPrimary\"\r\n                        variant=\"h6\"\r\n                        component=\"h2\"\r\n                        noWrap\r\n                        style={{ alignSelf: \"flex-end\" }}\r\n                      >\r\n                        {title}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                </Link>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Page from \"./helpers/Page\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Page maxWidth=\"md\">\r\n      <Typography component=\"h2\" variant=\"h6\">\r\n        What this is about\r\n      </Typography>\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"body1\"\r\n        style={{ width: \"100%\" }}\r\n        align=\"left\"\r\n      >\r\n        This website allows users to create a list of related images and/or item\r\n        names and provides an easy way for the user to sort it.\r\n      </Typography>\r\n      <br />\r\n      <Typography component=\"h2\" variant=\"h6\">\r\n        How it works\r\n      </Typography>\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"body1\"\r\n        align=\"left\"\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        This website allows users to upload images or input item names. An Elo\r\n        system is used to determine the ranking of each item on the list. Two\r\n        random items on the list are chosen and you get to choose which one is\r\n        better. As you continue to rank items, the Elo of each item becomes more\r\n        representatitve of what you intended it to be.\r\n      </Typography>\r\n      <br />\r\n      <Typography component=\"h2\" variant=\"h6\">\r\n        How to get started\r\n      </Typography>\r\n      <Typography\r\n        component=\"h2\"\r\n        variant=\"body1\"\r\n        align=\"left\"\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        Make an account → create template → add items → edit items if needed →\r\n        start ranking → view rankings\r\n      </Typography>\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport PopUp from \"../../helpers/PopUp\";\r\nimport { FilePond, registerPlugin, File } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\n// @ts-ignore\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addItem } from \"../../../services/template\";\r\nimport Page from \"../../helpers/Page\";\r\nregisterPlugin(\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginFileValidateType,\r\n  FilePondPluginImageResize,\r\n  FilePondPluginFileEncode\r\n);\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\nexport default ({\r\n  id,\r\n  returnUrl,\r\n  setOpen,\r\n}: {\r\n  id: string | number;\r\n  returnUrl?: string;\r\n  setOpen?: (val: boolean) => void;\r\n}) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [image, setImage] = React.useState<File[]>([]);\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [textItems, setTextItems] = React.useState(\"\");\r\n  const onSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (image.length === 0 && textItems.trim().length === 0) {\r\n      setMessage(\"No items added\");\r\n      return;\r\n    }\r\n    addItem({\r\n      id,\r\n      images:\r\n        // @ts-ignore\r\n        image\r\n          .map((item) => ({\r\n            imgStringBase64: `data:${\r\n              // @ts-ignore\r\n              item.fileType\r\n              // @ts-ignore\r\n            };base64,${item.getFileEncodeBase64String()}`,\r\n            name: item.filenameWithoutExtension.substring(0, 40),\r\n          }))\r\n          .concat(\r\n            textItems\r\n              .trim()\r\n              .split(\"\\n\")\r\n              .filter((item) => item.trim())\r\n              .map((item) => ({\r\n                imgStringBase64: \"\",\r\n                name: item.substring(0, 40),\r\n              }))\r\n          ),\r\n    })\r\n      .then(() => {\r\n        setImage([]);\r\n        setTextItems(\"\");\r\n        setMessage(\"Successfully added the item(s)&severity=success\");\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          const status = err.response.status;\r\n          setMessage(`Error code ${status}.`);\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <Page maxWidth=\"md\">\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Add Items\r\n      </Typography>\r\n      <Typography component=\"p\" variant=\"subtitle1\">\r\n        An item can either be an image or just plain text. For uploading an\r\n        image, the name of that image item is the file name of the image. The\r\n        name of an item automatically gets truncated down to a maximum of 40\r\n        characters.\r\n      </Typography>\r\n\r\n      <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n        <Grid container spacing={1} justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              Add image items\r\n            </Typography>\r\n            <FilePond\r\n              files={image}\r\n              // @ts-ignore\r\n              imagePreviewHeight={150}\r\n              imagePreviewMaxFileSize=\"1MB\"\r\n              imageResizeMode=\"cover\"\r\n              acceptedFileTypes={[\"image/*\"]}\r\n              allowMultiple={true}\r\n              getFileEncodeBase64String\r\n              onupdatefiles={(fileItems) => setImage(fileItems)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              Add text items\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={5}\r\n              label=\"Item names\"\r\n              placeholder=\"Put each item on a new line\"\r\n              onChange={(e) => setTextItems(e.target.value)}\r\n              value={textItems}\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n              Add Items\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                if (image.length || textItems.trim().length !== 0)\r\n                  setMessage(\"Add or remove all items before finishing\");\r\n                else {\r\n                  if (setOpen) setOpen(false);\r\n                  if (returnUrl) history.push(returnUrl);\r\n                }\r\n              }}\r\n            >\r\n              Finish\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <PopUp severity=\"error\" message={message} setMessage={setMessage} />\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Theme,\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport PopUp from \"../../helpers/PopUp\";\r\nimport { FilePond, registerPlugin, File } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\r\nimport FilePondPluginImageResize from \"filepond-plugin-image-resize\";\r\n// @ts-ignore\r\nimport FilePondPluginFileEncode from \"filepond-plugin-file-encode\";\r\nimport { addTemplate } from \"../../../services/template\";\r\nimport AddItems from \"./AddItems\";\r\nimport Page from \"../../helpers/Page\";\r\nregisterPlugin(\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginFileValidateType,\r\n  FilePondPluginImageResize,\r\n  FilePondPluginFileEncode\r\n);\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const [templateName, setTemplateName] = React.useState(\"\");\r\n  const [desc, setDesc] = React.useState(\"\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [templateImage, setTemplateImage] = React.useState<File | null>(null);\r\n  const [id, setId] = React.useState<number | string>(\"\");\r\n  const onSubmit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (!templateName) {\r\n      setMessage(\"Template name cannot be empty\");\r\n      return;\r\n    }\r\n    addTemplate({\r\n      title: templateName,\r\n      info: desc,\r\n      imgStringBase64:\r\n        // @ts-ignore\r\n        templateImage\r\n          ? `data:${\r\n              // @ts-ignore\r\n              templateImage.fileType\r\n              // @ts-ignore\r\n            };base64,${templateImage.getFileEncodeBase64String()}`\r\n          : \"\",\r\n    })\r\n      .then(({ data }) => {\r\n        setId(data.id);\r\n        setTemplateName(\"\");\r\n        setDesc(\"\");\r\n        setTemplateImage(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          const status = err.response.status;\r\n          if (status === 401) {\r\n            setMessage(\"You need to be logged in to make a template\");\r\n          } else\r\n            setMessage(\r\n              `Error code ${status}. Do you have a template with the same title?`\r\n            );\r\n        }\r\n      });\r\n  };\r\n  if (id) return <AddItems id={id} returnUrl={`/myitems/${id}`} />;\r\n  return (\r\n    <Page maxWidth=\"xs\">\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Create a Template\r\n      </Typography>\r\n      <form className={classes.form} noValidate onSubmit={onSubmit}>\r\n        <Grid container spacing={1} justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              required\r\n              fullWidth\r\n              label={`Title (${50 - templateName.length} characters remaining)`}\r\n              onChange={(e) => setTemplateName(e.target.value.substring(0, 50))}\r\n              value={templateName}\r\n              autoFocus\r\n              color=\"secondary\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={desc}\r\n              label={`Description (${300 - desc.length} characters remaining)`}\r\n              placeholder=\"300 characters max\"\r\n              onChange={(e) => setDesc(e.target.value.substring(0, 300))}\r\n              color=\"secondary\"\r\n              rows={7}\r\n              rowsMax={10}\r\n              multiline\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography component=\"p\" variant=\"subtitle1\">\r\n              Upload Template Image (Optional)\r\n            </Typography>\r\n            <FilePond\r\n              files={templateImage ? [templateImage] : []}\r\n              // @ts-ignore\r\n              imagePreviewHeight={300}\r\n              imagePreviewMaxFileSize=\"2MB\"\r\n              imageResizeMode=\"cover\"\r\n              acceptedFileTypes={[\"image/*\"]}\r\n              allowMultiple={false}\r\n              getFileEncodeBase64String\r\n              onupdatefiles={(fileItems) => {\r\n                if (fileItems.length) setTemplateImage(fileItems[0]);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n              Next Step\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      <PopUp severity=\"error\" message={message} setMessage={setMessage} />\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { makeStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport interface DialogInfo {\r\n  title?: string;\r\n  desc?: string;\r\n  acceptButtonDesc: string;\r\n  rejectButtonDesc: string;\r\n  open: boolean;\r\n  setOpen: (val: boolean) => void;\r\n  onAccept: () => void;\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  button: {\r\n    color: theme.palette.info.main,\r\n  },\r\n}));\r\n\r\nexport default (props: DialogInfo) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={() => props.setOpen(true)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        {props.title && (\r\n          <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        )}\r\n        {props.desc && (\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {props.desc}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n        )}\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => props.setOpen(false)}\r\n            className={classes.button}\r\n          >\r\n            {props.rejectButtonDesc}\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              props.onAccept();\r\n              props.setOpen(true);\r\n            }}\r\n            className={classes.button}\r\n            autoFocus\r\n          >\r\n            {props.acceptButtonDesc}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import reactRouterDom, { useHistory } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {\r\n  Theme,\r\n  makeStyles,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  Tooltip,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  getSpecificTemplate,\r\n  SpecificTemplate,\r\n  deleteTemplate,\r\n  deleteItem,\r\n  updateItem,\r\n  updateTemplate,\r\n} from \"../../../services/template\";\r\nimport Page from \"../../helpers/Page\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport ConfirmDialog from \"../../helpers/ConfirmDialog\";\r\nimport ShowChartIcon from \"@material-ui/icons/ShowChart\";\r\nimport AddItems from \"../make_template/AddItems\";\r\nimport PopUp from \"../../helpers/PopUp\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  root: {\r\n    height: \"100%\",\r\n  },\r\n  titleInput: { width: \"50%\" },\r\n  descInput: { width: \"50%\" },\r\n  button: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  active: {\r\n    color: theme.palette.info.main,\r\n  },\r\n  iconBar: {\r\n    display: \"grid\",\r\n    justifyContent: \"center\",\r\n    gridAutoFlow: \"column\",\r\n  },\r\n  delete: {\r\n    color: theme.palette.warning.main,\r\n  },\r\n}));\r\nexport default ({ match }: { match: reactRouterDom.match }) => {\r\n  const templateId = (match.params as { id: string | number }).id;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [template, setTemplate] = React.useState({\r\n    templateImageUrl: \"\",\r\n    createdOn: \"\",\r\n    lastUpdated: \"\",\r\n  });\r\n  const [title, setTitle] = React.useState(\"Loading...\");\r\n  const [info, setInfo] = React.useState(\"Loading...\");\r\n  const [items, setItems] = React.useState<SpecificTemplate[\"items\"]>([]);\r\n  const [isDeleteDialogOpen, setIsDeleteDialogOpen] = React.useState(false);\r\n  const [isEditMode, setEditMode] = React.useState(false);\r\n  const [isAddMode, setAddMode] = React.useState(false);\r\n  const [deleteList, setDeleteList] = React.useState<Set<number>>(new Set());\r\n  const [err, setErr] = React.useState(\"\");\r\n  const deleteTemplateAction = () => {\r\n    deleteTemplate(templateId).then(() => history.push(\"/myitems\"));\r\n  };\r\n  React.useEffect(() => {\r\n    getSpecificTemplate(templateId).then(({ data }) => {\r\n      setTemplate({\r\n        templateImageUrl: data.templateImageUrl as string,\r\n        createdOn: data.createdOn,\r\n        lastUpdated: data.lastUpdated,\r\n      });\r\n      setTitle(data.title);\r\n      setInfo(data.info);\r\n      setItems(data.items);\r\n    });\r\n  }, [isAddMode, templateId]);\r\n  if (isAddMode) return <AddItems id={templateId} setOpen={setAddMode} />;\r\n  return (\r\n    <Page\r\n      maxWidth={false}\r\n      paperStyles={(theme: Theme) => ({\r\n        marginLeft: theme.spacing(8),\r\n        marginRight: theme.spacing(2),\r\n      })}\r\n      containerStyles={(_) => ({\r\n        display: \"grid\",\r\n      })}\r\n    >\r\n      <Grid container spacing={2} justify=\"flex-start\">\r\n        <Grid item xs={12} className={classes.iconBar}>\r\n          <Tooltip title=\"Rank the items\">\r\n            <IconButton\r\n              aria-label=\"rank the items\"\r\n              onClick={() => {\r\n                if (items.length >= 2) history.push(`/play/${templateId}`);\r\n                else {\r\n                  setErr(\"Need at least two items to start ranking\");\r\n                }\r\n              }}\r\n            >\r\n              <PlayArrowIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Show rankings\">\r\n            <IconButton\r\n              aria-label=\"rankings of items\"\r\n              onClick={() => history.push(`/rankings/${templateId}`)}\r\n            >\r\n              <ShowChartIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Add new items\">\r\n            <IconButton\r\n              aria-label=\"add new items\"\r\n              onClick={() => setAddMode(true)}\r\n            >\r\n              <AddBoxIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Delete this template\">\r\n            <IconButton\r\n              aria-label=\"delete template\"\r\n              onClick={() => setIsDeleteDialogOpen(true)}\r\n            >\r\n              <DeleteIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Edit this template\">\r\n            <IconButton\r\n              aria-label=\"edit template\"\r\n              onClick={() => {\r\n                if (isEditMode) {\r\n                  items.forEach((item) => {\r\n                    if (!deleteList.has(item.id)) {\r\n                      updateItem(item.id, item.name);\r\n                    } else {\r\n                      deleteItem(item.id);\r\n                    }\r\n                  });\r\n                  updateTemplate(templateId, title, info).then(({ data }) => {\r\n                    setTemplate({ ...template, lastUpdated: data.updatedTime });\r\n                  });\r\n                }\r\n                setEditMode(!isEditMode);\r\n              }}\r\n            >\r\n              <EditIcon\r\n                fontSize=\"large\"\r\n                className={(isEditMode && classes.active) || undefined}\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        {isEditMode && (\r\n          <Grid item xs={12}>\r\n            <Typography>\r\n              <b>Press the edit button again to save</b>\r\n            </Typography>\r\n          </Grid>\r\n        )}\r\n        <Grid item xs={12}>\r\n          {isEditMode ? (\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label={`Title`}\r\n              className={classes.titleInput}\r\n              onBlur={(e) => setTitle(e.target.value)}\r\n              onChange={(e) =>\r\n                (e.target.value = e.target.value.substring(0, 50))\r\n              }\r\n              defaultValue={title}\r\n              color=\"secondary\"\r\n            />\r\n          ) : (\r\n            <Typography component=\"h1\" variant=\"h4\" noWrap>\r\n              {title}\r\n            </Typography>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          {isEditMode && (\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label={`Description`}\r\n              className={classes.descInput}\r\n              fullWidth\r\n              multiline\r\n              rows={5}\r\n              onBlur={(e) => setInfo(e.target.value)}\r\n              onChange={(e) =>\r\n                (e.target.value = e.target.value.substring(0, 300))\r\n              }\r\n              defaultValue={info}\r\n              color=\"secondary\"\r\n            />\r\n          )}\r\n          {!isEditMode && info.trim() && (\r\n            <Typography\r\n              component=\"p\"\r\n              variant=\"body1\"\r\n              style={{ wordWrap: \"break-word\" }}\r\n            >\r\n              <b>Description: </b>\r\n              {info}\r\n            </Typography>\r\n          )}\r\n          {!isEditMode && (\r\n            <>\r\n              <Typography component=\"p\" variant=\"body1\">\r\n                <b>Created On:</b> {new Date(template.createdOn).toString()}\r\n              </Typography>\r\n              <Typography component=\"p\" variant=\"body1\">\r\n                <b>Last Updated:</b> {new Date(template.lastUpdated).toString()}\r\n              </Typography>\r\n            </>\r\n          )}\r\n        </Grid>\r\n\r\n        {items\r\n          .filter(({ id }) => !deleteList.has(id))\r\n          .map(({ id, itemImageUrl, name }, index) => (\r\n            <Grid item xs={5} sm={4} md={3} lg={2} key={id}>\r\n              <Card variant=\"elevation\" elevation={5} className={classes.root}>\r\n                <CardContent>\r\n                  {isEditMode ? (\r\n                    <TextField\r\n                      key={id}\r\n                      variant=\"outlined\"\r\n                      label={`Name`}\r\n                      className={classes.descInput}\r\n                      style={{ width: \"100%\" }}\r\n                      onBlur={(e) => {\r\n                        const copy = [...items];\r\n                        copy[index] = {\r\n                          ...copy[index],\r\n                          name: e.target.value,\r\n                        };\r\n                        setItems(copy);\r\n                      }}\r\n                      onChange={(e) =>\r\n                        (e.target.value = e.target.value.substring(0, 40))\r\n                      }\r\n                      defaultValue={name}\r\n                      color=\"secondary\"\r\n                    />\r\n                  ) : (\r\n                    <Typography component=\"h4\" variant=\"body1\" noWrap>\r\n                      {name}\r\n                    </Typography>\r\n                  )}\r\n                </CardContent>\r\n                {itemImageUrl && (\r\n                  <img\r\n                    alt={name}\r\n                    src={itemImageUrl as string}\r\n                    style={{ maxHeight: 400, width: \"100%\" }}\r\n                  />\r\n                )}\r\n                {isEditMode && (\r\n                  <Tooltip title=\"Delete this item\">\r\n                    <IconButton\r\n                      aria-label=\"delete item\"\r\n                      onClick={() => {\r\n                        const copy = new Set(deleteList);\r\n                        copy.add(id);\r\n                        setDeleteList(copy);\r\n                      }}\r\n                      style={{\r\n                        display: \"block\",\r\n                        margin: \"auto\",\r\n                        position: \"relative\",\r\n                      }}\r\n                    >\r\n                      <DeleteIcon className={classes.delete} />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                )}\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n      </Grid>\r\n      <ConfirmDialog\r\n        title=\"Delete this template\"\r\n        acceptButtonDesc=\"OK\"\r\n        rejectButtonDesc=\"Go back\"\r\n        open={isDeleteDialogOpen}\r\n        setOpen={setIsDeleteDialogOpen}\r\n        onAccept={deleteTemplateAction}\r\n      />\r\n      <PopUp message={err} setMessage={setErr} severity=\"error\" />\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport reactRouterDom, { useHistory } from \"react-router-dom\";\r\nimport { rankItems } from \"../../../services/ranking\";\r\nimport {\r\n  getSpecificTemplate,\r\n  SpecificTemplate,\r\n} from \"../../../services/template\";\r\nimport Page from \"../../helpers/Page\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  CardActionArea,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    height: \"100%\",\r\n    minHeight: 400,\r\n  },\r\n  border: {\r\n    height: \"100%\",\r\n  },\r\n  title: {\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  buttons: {\r\n    marginTop: theme.spacing(6),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nexport default ({ match }: { match: reactRouterDom.match }) => {\r\n  const templateId = (match.params as { id: string | number }).id;\r\n  const [items, setItems] = React.useState<SpecificTemplate[\"items\"]>([]);\r\n  const [template, setTemplate] = React.useState<SpecificTemplate | null>(null);\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const getRandom = (data?: SpecificTemplate) => {\r\n    let allItems;\r\n    if (!data) allItems = (template as SpecificTemplate).items;\r\n    else allItems = data.items;\r\n\r\n    if (allItems.length < 2)\r\n      setMessage(\"Need at least two items to start ranking\");\r\n    else {\r\n      const firstRandom = allItems[~~(Math.random() * allItems.length)];\r\n      let secondRandom = allItems[~~(Math.random() * allItems.length)];\r\n      while (secondRandom.id === firstRandom.id) {\r\n        secondRandom = allItems[~~(Math.random() * allItems.length)];\r\n      }\r\n      setItems([firstRandom, secondRandom]);\r\n    }\r\n  };\r\n  React.useEffect(() => {\r\n    getSpecificTemplate(templateId)\r\n      .then(({ data }) => {\r\n        setTemplate(data);\r\n        getRandom(data);\r\n      })\r\n      .catch(() => setMessage(\"Could not get template\"));\r\n    // eslint-disable-next-line\r\n  }, [templateId]);\r\n  const handleSelect = (itemId: string | number) => () => {\r\n    setIsLoading(true);\r\n    if (items.length > 1) {\r\n      const wonId = itemId;\r\n      const lostId = items[0].id === wonId ? items[0].id : items[1].id;\r\n      rankItems(templateId, wonId, lostId)\r\n        .then(() => {\r\n          getRandom();\r\n          setIsLoading(false);\r\n        })\r\n        .catch(() => setMessage(\"This template cannot be ranked\"));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page maxWidth=\"xl\">\r\n      {message ? (\r\n        <Typography component=\"h2\" variant=\"h3\">\r\n          {message}\r\n        </Typography>\r\n      ) : (\r\n        <>\r\n          <Typography component=\"h2\" variant=\"h4\" className={classes.title}>\r\n            Click the one you think is better (More accurate rank as you play\r\n            more)\r\n          </Typography>\r\n          {!isLoading && (\r\n            <>\r\n              <Grid container spacing={6} justify=\"flex-start\">\r\n                {items.map(({ id, itemImageUrl, name }) => (\r\n                  <Grid item xs={12} md={6} key={id}>\r\n                    <Box className={classes.border} border={2}>\r\n                      <Card\r\n                        variant=\"elevation\"\r\n                        elevation={5}\r\n                        className={classes.root}\r\n                        style={{ height: \"50vh\" }}\r\n                      >\r\n                        <CardActionArea\r\n                          style={{ height: \"100%\" }}\r\n                          onClick={handleSelect(id)}\r\n                        >\r\n                          {itemImageUrl && (\r\n                            <img\r\n                              alt={name}\r\n                              src={itemImageUrl as string}\r\n                              style={{\r\n                                maxHeight: \"50vh\",\r\n                                display: \"block\",\r\n                                margin: \"auto\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                          {!itemImageUrl && (\r\n                            <Typography\r\n                              align=\"center\"\r\n                              component=\"h3\"\r\n                              variant=\"h2\"\r\n                              style={{ wordWrap: \"break-word\" }}\r\n                            >\r\n                              {name}\r\n                            </Typography>\r\n                          )}\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n              <Box component=\"span\" className={classes.buttons}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"large\"\r\n                  className={classes.button}\r\n                  onClick={() => history.push(`/myitems/${templateId}`)}\r\n                >\r\n                  Go back to template\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  size=\"large\"\r\n                  className={classes.button}\r\n                  onClick={() => history.push(`/rankings/${templateId}`)}\r\n                >\r\n                  Show Ranking\r\n                </Button>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </Page>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/play\";\r\nexport const rankItems = (\r\n  templateId: string | number,\r\n  wonId: string | number,\r\n  lostId: string | number\r\n) => {\r\n  return axios.post<undefined>(\r\n    `${baseUrl}/${templateId}`,\r\n    {\r\n      won: wonId,\r\n      lost: lostId,\r\n    },\r\n    {\r\n      headers: {\r\n        authorization: `bearer ${window.localStorage.getItem(\"login_token\")}`,\r\n      },\r\n    }\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport reactRouterDom, { useHistory } from \"react-router-dom\";\r\nimport Page from \"../../helpers/Page\";\r\nimport {\r\n  getSpecificTemplate,\r\n  SpecificTemplate,\r\n} from \"../../../services/template\";\r\nimport PopUp from \"../../helpers/PopUp\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  makeStyles,\r\n  Theme,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  title: { marginBottom: theme.spacing(3) },\r\n  cardInfo: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  card: {\r\n    background: theme.palette.primary.main,\r\n  },\r\n  button: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nexport default ({ match }: { match: reactRouterDom.match }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const templateId = (match.params as { id: string | number }).id;\r\n  const [template, setTemplate] = React.useState<SpecificTemplate | null>(null);\r\n  const [err, setErr] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    getSpecificTemplate(templateId)\r\n      .then(({ data }) => {\r\n        data.items.sort((a, b) => {\r\n          if (a.elo < b.elo) return 1;\r\n          return -1;\r\n        });\r\n        setTemplate(data);\r\n      })\r\n      .catch(() => {\r\n        setErr(\"Could not get template rankings\");\r\n      });\r\n  }, [templateId]);\r\n  return (\r\n    <Page maxWidth=\"lg\">\r\n      {template && (\r\n        <>\r\n          <Typography component=\"h2\" variant=\"h3\" className={classes.title}>\r\n            {template.title}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            size=\"large\"\r\n            className={classes.button}\r\n            onClick={() => history.push(`/myitems/${templateId}`)}\r\n          >\r\n            Go back to template\r\n          </Button>\r\n          <Box>\r\n            {template.items.map(({ id, name, itemImageUrl, elo }, index) => {\r\n              return (\r\n                <React.Fragment key={id}>\r\n                  <Card\r\n                    variant=\"elevation\"\r\n                    elevation={5}\r\n                    style={{ display: \"flex\" }}\r\n                    className={classes.card}\r\n                  >\r\n                    <CardContent className={classes.cardInfo}>\r\n                      <Typography component=\"h3\" variant=\"body1\">\r\n                        <b>Rank: {index + 1}</b>\r\n                      </Typography>\r\n                      <Typography component=\"h3\" variant=\"body1\">\r\n                        Name: {name}\r\n                      </Typography>\r\n                      <Typography component=\"h3\" variant=\"body1\">\r\n                        Elo: {elo}\r\n                      </Typography>\r\n                    </CardContent>\r\n                    {itemImageUrl && (\r\n                      <img\r\n                        alt={name}\r\n                        src={itemImageUrl as string}\r\n                        style={{\r\n                          maxHeight: \"30vh\",\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Card>\r\n                  <br />\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </Box>\r\n        </>\r\n      )}\r\n      <PopUp message={err} setMessage={setErr} />\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton,\n  Box,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport LoginForm from \"./account_setup/LoginForm\";\nimport RegisterForm from \"./account_setup/RegisterForm\";\nimport OwnItems from \"./item_directories/own_items/ShowTemplates\";\nimport FrontPage from \"./FrontPage\";\nimport AddList from \"./item_directories/make_template/AddList\";\nimport ShowItems from \"./item_directories/own_items/ShowItems\";\nimport RankItems from \"./item_directories/ranking/RankItems\";\nimport ShowRankings from \"./item_directories/ranking/ShowRankings\";\nconst useStyles = makeStyles((theme: Theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  logout: {\n    background: theme.palette.warning.main,\n  },\n}));\nexport type HasLoginToken = (val: boolean) => void;\nexport default () => {\n  const classes = useStyles();\n  const [hasLoginToken, setHasLoginToken] = React.useState(\n    !!window.localStorage.getItem(\"login_token\")\n  );\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar component=\"nav\">\n          <Typography variant=\"h5\" className={classes.title}>\n            {document.title}\n          </Typography>\n\n          {!hasLoginToken ? (\n            <>\n              <Box pl={2}>\n                <Link\n                  to=\"/login\"\n                  style={{ textDecoration: \"none\" }}\n                  tabIndex={-1}\n                >\n                  <Button variant=\"outlined\">Login</Button>\n                </Link>\n              </Box>\n              <Box pl={2}>\n                <Link\n                  to=\"/register\"\n                  style={{ textDecoration: \"none\" }}\n                  tabIndex={-1}\n                >\n                  <Button variant=\"outlined\">Register</Button>\n                </Link>\n              </Box>\n            </>\n          ) : (\n            <>\n              <Link\n                to=\"/create\"\n                style={{ textDecoration: \"none\" }}\n                tabIndex={-1}\n              >\n                <Button variant=\"outlined\">Create Template</Button>\n              </Link>\n              <Box pl={2}>\n                <Link\n                  to=\"/myitems\"\n                  style={{ textDecoration: \"none\" }}\n                  tabIndex={-1}\n                >\n                  <Button variant=\"outlined\">Your Templates</Button>\n                </Link>\n              </Box>\n              <Box pl={2}>\n                <Link to=\"/\" style={{ textDecoration: \"none\" }} tabIndex={-1}>\n                  <Button\n                    variant=\"outlined\"\n                    className={classes.logout}\n                    onClick={() => {\n                      window.localStorage.clear();\n                      setHasLoginToken(false);\n                    }}\n                  >\n                    Logout\n                  </Button>\n                </Link>\n              </Box>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n      <Switch>\n        <Route\n          path=\"/login\"\n          component={() => <LoginForm setHasLoginToken={setHasLoginToken} />}\n        />\n        <Route\n          path=\"/register\"\n          component={() => <RegisterForm setHasLoginToken={setHasLoginToken} />}\n        />\n        <Route path=\"/myitems/:id\" component={ShowItems} />\n        <Route path=\"/myitems\" component={OwnItems} />\n        <Route path=\"/create\" component={AddList} />\n        <Route path=\"/play/:id\" component={RankItems} />\n        <Route path=\"/rankings/:id\" component={ShowRankings} />\n        <Route path=\"/\" component={FrontPage} />\n      </Switch>\n    </>\n  );\n};\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { amber, purple, pink } from \"@material-ui/core/colors\";\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: purple[900],\r\n    },\r\n    secondary: {\r\n      main: purple[600],\r\n    },\r\n    background: {\r\n      paper: \"#2c2c3c\",\r\n      default: \"#1c1c1e\",\r\n    },\r\n    info: {\r\n      main: amber[900],\r\n    },\r\n    warning: {\r\n      main: pink[900],\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport theme from \"./components/theme\";\ndocument.title = \"EloSort\";\nReactDOM.render(\n  <Router>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}